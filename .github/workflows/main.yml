on: [push, pull_request, create]

name: Test

jobs:
  test:
    strategy:
      matrix:
        go-version: [1.12.x, 1.13.x]
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
    - name: Install Matrix Go
      uses: actions/setup-go@v2-beta
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Test code
      env:
        GO111MODULE: on
      run: |
        go test ./pkg/...
        go vet ./pkg/...
  build:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Install Go 1.13.1
      uses: actions/setup-go@v2-beta
      with:
        go-version: '1.13.1'
    - name: Checkout code
      uses: actions/checkout@v2        
    - name: Build TUSD
      if: startsWith(github.ref, 'refs/tags/')    
      env:
        GO111MODULE: on
      run: ./scripts/build_all.sh
    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: tusd_*.*
      env:
        GITHUB_TOKEN: ${{ secrets.GH_RELEASE_TOKEN }} 
    - uses: azure/docker-login@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}        
    - name: Build and push docker image
      run: |
        docker build -t tusproject/tusd:$GITHUB_SHA .
        docker push tusproject/tusd:$GITHUB_SHA      
    - name: Deploy to cluster
      uses: steebchen/kubectl@master
      env:
        KUBE_CONFIG_DATA: | 
          ${{ secrets.KUBECONFIG }}
      with:
        args: set image --record deployment/tusd tusd=tusproject/tusd:$GITHUB_SHA -n tus       
